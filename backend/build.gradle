plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
}

group = 'moaon'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

ext {
    snippetsDir = file('build/generated-snippets')
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    testImplementation 'org.testcontainers:elasticsearch'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // db
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // QueryDSL
    implementation "io.github.openfeign.querydsl:querydsl-jpa:7.0"
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:7.0:jpa"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    testAnnotationProcessor "io.github.openfeign.querydsl:querydsl-apt:7.0:jpa"
    testAnnotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // TestContainers
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:mysql"
    testImplementation "org.springframework.boot:spring-boot-testcontainers"

    // rest docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // flyway
    implementation 'org.flywaydb:flyway-mysql'

    // monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // dataFaker
    testImplementation 'net.datafaker:datafaker:2.1.0'

    // selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.8.0'

    // jsoup
    implementation 'org.jsoup:jsoup:1.21.2'

    // healthcheck
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'
}

clean {
    delete file('src/main/generated')
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/sources/annotationProcessor/java/main"
        }
    }
}


tasks.named('test', Test) {
    useJUnitPlatform()
    outputs.dir snippetsDir

    doFirst {
        delete snippetsDir
    }
}

asciidoctor {
    configurations 'asciidoctorExt'
    dependsOn test
    inputs.dir snippetsDir
    outputDir = file('src/main/resources/static/docs')
    sources {
        include('**/index.adoc')
    }
    baseDirFollowsSourceFile()
    doFirst {
        delete outputDir
    }
}

bootJar {
    from('${asciidoctor.outputDir}') {
        into 'static/docs'
    }
}

tasks.named('build') {
    dependsOn asciidoctor
}
